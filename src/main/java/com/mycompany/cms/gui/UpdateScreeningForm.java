/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.cms.gui;

import com.mycompany.cms.models.Cinema;
import com.mycompany.cms.models.Movie;
import com.mycompany.cms.util.Connector;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Time;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author marks
 */
public class UpdateScreeningForm extends javax.swing.JFrame {
    String[] movieList;
    String[] cinemaList;
    AdminScreening parent;
//    String selectedMovie;
//    String selectedCinema;

    /**
     * Creates new form UpdateScreeningForm
     */
    public UpdateScreeningForm(AdminScreening parent, String[] movieList, String[] cinemaList, String selectedMovie, String selectedCinema) {
        initComponents();
        this.movieList = movieList;
        this.cinemaList = cinemaList;
        this.parent = parent;
        
        jMovieUpdate.setModel(new javax.swing.DefaultComboBoxModel<>( movieList));
        jMovieUpdate.setSelectedItem(selectedMovie);
        jScreenUpdate.setModel(new javax.swing.DefaultComboBoxModel<>( cinemaList));
        jScreenUpdate.setSelectedItem(selectedCinema);
        jShowDateUpdate.setValue((Date) parent.getScreeningDate());
        jShowTimeUpdate.setValue((Time) parent.getScreeningTime());
        jPriceUpdate.setText(parent.getPrice());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jUpdateButton = new javax.swing.JButton();
        jCancelButton = new javax.swing.JButton();
        jMovieUpdate = new javax.swing.JComboBox<>();
        jMovieLabelUpdate = new javax.swing.JLabel();
        jScreenUpdate = new javax.swing.JComboBox<>();
        jScreenLabelUpdate = new javax.swing.JLabel();
        jShowDateLabelUpdate = new javax.swing.JLabel();
        jShowDateUpdate = new javax.swing.JSpinner();
        jShowTimeUpdate = new javax.swing.JSpinner();
        jTimeUpdate = new javax.swing.JLabel();
        jPriceUpdate = new javax.swing.JTextField();
        jPriceLabelUpdate = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jUpdateButton.setBackground(new java.awt.Color(239, 124, 18));
        jUpdateButton.setForeground(new java.awt.Color(255, 255, 255));
        jUpdateButton.setText("Update");
        jUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUpdateButtonActionPerformed(evt);
            }
        });

        jCancelButton.setBackground(new java.awt.Color(247, 196, 149));
        jCancelButton.setText("Cancel");
        jCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCancelButtonActionPerformed(evt);
            }
        });

        jMovieUpdate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Movie", "Transformer", "9", "CJ7", "Avengers" }));

        jMovieLabelUpdate.setText("Movie");

        jScreenUpdate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Screen", "1", "2", "3", "4" }));

        jScreenLabelUpdate.setText("Cinema");

        jShowDateLabelUpdate.setText("Show Date");

        jShowDateUpdate.setModel(new javax.swing.SpinnerDateModel());
        jShowDateUpdate.setEditor(new javax.swing.JSpinner.DateEditor(jShowDateUpdate, "MM/dd/yyyy"));

        jShowTimeUpdate.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), null, null, java.util.Calendar.AM_PM));
        jShowTimeUpdate.setEditor(new javax.swing.JSpinner.DateEditor(jShowTimeUpdate, "hh:mm aa"));
        jShowTimeUpdate.setMinimumSize(new java.awt.Dimension(144, 30));

        jTimeUpdate.setText("Time");

        jPriceLabelUpdate.setText("Price");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jMovieUpdate, 0, 235, Short.MAX_VALUE)
                    .addComponent(jScreenUpdate, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jShowDateUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                    .addComponent(jShowTimeUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPriceLabelUpdate)
                    .addComponent(jTimeUpdate)
                    .addComponent(jShowDateLabelUpdate)
                    .addComponent(jMovieLabelUpdate)
                    .addComponent(jScreenLabelUpdate)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jUpdateButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCancelButton))
                    .addComponent(jPriceUpdate))
                .addContainerGap(217, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jMovieLabelUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jMovieUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScreenLabelUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScreenUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jShowDateLabelUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jShowDateUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTimeUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jShowTimeUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPriceLabelUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPriceUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jUpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUpdateButtonActionPerformed
        // TODO add your handling code here;
        if (jPriceUpdate.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please enter a price", "Confirm", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Movie mov = parent.getMovieByTitle((String) jMovieUpdate.getSelectedItem());
        Cinema cin = parent.getCinemaByName((String) jScreenUpdate.getSelectedItem());
        int movieId = mov.getId();
        int cinemaId = cin.getId();
        int price = Integer.parseInt(jPriceUpdate.getText());
        LocalDate screeningDate = ((Date) jShowDateUpdate.getValue()).toInstant().atZone(java.time.ZoneId.systemDefault()).toLocalDate();
        LocalTime screeningTime = ((Date) jShowTimeUpdate.getValue()).toInstant().atZone(java.time.ZoneId.systemDefault()).toLocalTime();
        LocalTime endTime = screeningTime.plusSeconds(mov.getDuration());
        int screeningID = parent.getScreeningId();

        try {
            Connector connector = new Connector();
            Connection con = connector.getConnection();

            String query = "UPDATE screening SET movie_id = ?, cinema_id = ?, time_start = ?, time_end = ?, date = ?, price = ? WHERE screening_id = ?";

            PreparedStatement prepStmt = con.prepareStatement(query);

            prepStmt.setInt(1, movieId);
            prepStmt.setInt(2, cinemaId);
            prepStmt.setTime(3, Time.valueOf(screeningTime));
            prepStmt.setTime(4, Time.valueOf(endTime));
            prepStmt.setObject(5, screeningDate);
            prepStmt.setInt(6, price);
            prepStmt.setInt(7, screeningID);

            prepStmt.executeUpdate();

        } catch (SQLException e) {
            System.out.println(e);
        }
        parent.refreshTable();
    }//GEN-LAST:event_jUpdateButtonActionPerformed

    private void jCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_jCancelButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateScreeningForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateScreeningForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateScreeningForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateScreeningForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                new UpdateScreeningForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jCancelButton;
    private javax.swing.JLabel jMovieLabelUpdate;
    private javax.swing.JComboBox<String> jMovieUpdate;
    private javax.swing.JLabel jPriceLabelUpdate;
    private javax.swing.JTextField jPriceUpdate;
    private javax.swing.JLabel jScreenLabelUpdate;
    private javax.swing.JComboBox<String> jScreenUpdate;
    private javax.swing.JLabel jShowDateLabelUpdate;
    private javax.swing.JSpinner jShowDateUpdate;
    private javax.swing.JSpinner jShowTimeUpdate;
    private javax.swing.JLabel jTimeUpdate;
    private javax.swing.JButton jUpdateButton;
    // End of variables declaration//GEN-END:variables
}
