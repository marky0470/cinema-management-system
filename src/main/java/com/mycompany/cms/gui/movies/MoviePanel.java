package com.mycompany.cms.gui.movies;

import com.mycompany.cms.util.Connector;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author ikelm & iany
 */
public class MoviePanel extends javax.swing.JPanel {
    /**
     * Creates new form MoviePanel
     */
    public MoviePanel() {
        initComponents();
        refreshTable();
    }
    
    private void refreshTable() {       
        try {
            Connector connector = new Connector();
            Connection con = connector.getConnection();

            String query = "SELECT movie_id, title, rating, released, genre, duration FROM movies";

                try (PreparedStatement pstmt = con.prepareStatement(query);
                    ResultSet resultSet = pstmt.executeQuery()) {

                    DefaultTableModel model = (DefaultTableModel) jMovieTable.getModel();
                    model.setRowCount(0);

                    while (resultSet.next()) {
                    int movieId = resultSet.getInt("movie_id");
                    String title = resultSet.getString("title");
                    String rating = resultSet.getString("rating");
                    int released = resultSet.getInt("released");
                    String genre = resultSet.getString("genre");
                    int duration = resultSet.getInt("duration");

                    model.addRow(new Object[]{movieId, title, rating, released, genre, duration});
                    }
                }
            } catch (SQLException e) {
              System.out.println(e);
            }
    }
    
    private Image convertBlobToImage(byte[] blobData) throws IOException {
        ByteArrayInputStream bis = new ByteArrayInputStream(blobData);
        BufferedImage bufferedImage = ImageIO.read(bis);
        bis.close();
        return bufferedImage;
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jClearButton = new javax.swing.JButton();
        jUpdateButton = new javax.swing.JButton();
        jAddButton = new javax.swing.JButton();
        jSearchText = new javax.swing.JTextField();
        jMovieLabel = new javax.swing.JLabel();
        jTitleLabel = new javax.swing.JLabel();
        jRatingLabel = new javax.swing.JLabel();
        jDateLabel = new javax.swing.JLabel();
        jGenreLabel = new javax.swing.JLabel();
        jSearchButton = new javax.swing.JButton();
        jDurationLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jMovieTable = new javax.swing.JTable();
        jTitleText = new javax.swing.JTextField();
        jRatingText = new javax.swing.JTextField();
        jReleaseDateText = new javax.swing.JTextField();
        jGenreText = new javax.swing.JTextField();
        jDurationText = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jDeleteButton = new javax.swing.JButton();
        chooseImageButton = new javax.swing.JButton();
        imageContainerPanel = new javax.swing.JPanel();
        moviePosterLabel = new javax.swing.JLabel();
        jFilePathText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        jTextField1.setText("jTextField1");

        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(780, 720));
        setRequestFocusEnabled(false);
        setVerifyInputWhenFocusTarget(false);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });

        jClearButton.setText("Clear");
        jClearButton.setPreferredSize(null);
        jClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jClearButtonActionPerformed(evt);
            }
        });

        jUpdateButton.setText("Update");
        jUpdateButton.setPreferredSize(null);
        jUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUpdateButtonActionPerformed(evt);
            }
        });

        jAddButton.setBackground(new java.awt.Color(153, 0, 255));
        jAddButton.setForeground(new java.awt.Color(255, 255, 255));
        jAddButton.setText("Add");
        jAddButton.setPreferredSize(null);
        jAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAddButtonActionPerformed(evt);
            }
        });

        jSearchText.setPreferredSize(null);
        jSearchText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSearchTextActionPerformed(evt);
            }
        });

        jMovieLabel.setText("Movies");

        jTitleLabel.setText("Title");

        jRatingLabel.setText("Rating");

        jDateLabel.setText("Release date");

        jGenreLabel.setText("Genre");

        jSearchButton.setBackground(new java.awt.Color(204, 0, 255));
        jSearchButton.setForeground(new java.awt.Color(255, 255, 255));
        jSearchButton.setText("Search");
        jSearchButton.setPreferredSize(null);
        jSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSearchButtonActionPerformed(evt);
            }
        });

        jDurationLabel.setText("Duration");

        jMovieTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jMovieTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Title ", "Rating", "Release date", "Genre", "Duration"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jMovieTable.getTableHeader().setReorderingAllowed(false);
        jMovieTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jMovieTableMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jMovieTable);
        if (jMovieTable.getColumnModel().getColumnCount() > 0) {
            jMovieTable.getColumnModel().getColumn(0).setResizable(false);
            jMovieTable.getColumnModel().getColumn(0).setPreferredWidth(50);
            jMovieTable.getColumnModel().getColumn(1).setResizable(false);
            jMovieTable.getColumnModel().getColumn(2).setResizable(false);
            jMovieTable.getColumnModel().getColumn(3).setResizable(false);
            jMovieTable.getColumnModel().getColumn(4).setResizable(false);
            jMovieTable.getColumnModel().getColumn(5).setResizable(false);
        }

        jTitleText.setPreferredSize(null);

        jRatingText.setPreferredSize(null);
        jRatingText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRatingTextActionPerformed(evt);
            }
        });

        jReleaseDateText.setPreferredSize(null);

        jGenreText.setPreferredSize(null);

        jDurationText.setPreferredSize(null);

        jButton1.setText("Refresh");
        jButton1.setPreferredSize(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jDeleteButton.setText("Delete");
        jDeleteButton.setPreferredSize(null);
        jDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeleteButtonActionPerformed(evt);
            }
        });

        chooseImageButton.setText("Choose image");
        chooseImageButton.setPreferredSize(new java.awt.Dimension(85, 30));
        chooseImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseImageButtonActionPerformed(evt);
            }
        });

        imageContainerPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        imageContainerPanel.setPreferredSize(new java.awt.Dimension(200, 300));

        moviePosterLabel.setText(" ");

        javax.swing.GroupLayout imageContainerPanelLayout = new javax.swing.GroupLayout(imageContainerPanel);
        imageContainerPanel.setLayout(imageContainerPanelLayout);
        imageContainerPanelLayout.setHorizontalGroup(
            imageContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(moviePosterLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
        );
        imageContainerPanelLayout.setVerticalGroup(
            imageContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(moviePosterLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
        );

        jFilePathText.setEditable(false);
        jFilePathText.setToolTipText("");

        jLabel1.setText("File location:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDateLabel)
                                    .addComponent(jGenreLabel)
                                    .addComponent(jDurationLabel)
                                    .addComponent(jRatingLabel))
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jRatingText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jReleaseDateText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jGenreText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jDurationText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jTitleLabel)
                                        .addGap(55, 55, 55)
                                        .addComponent(jTitleText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(113, 113, 113)
                                        .addComponent(jUpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jDeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jMovieLabel)
                                .addGap(76, 76, 76)
                                .addComponent(imageContainerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(149, 149, 149)
                                .addComponent(chooseImageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(95, 95, 95)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jSearchText, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jSearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jFilePathText))
                        .addGap(25, 25, 25))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jMovieLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(imageContainerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(chooseImageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFilePathText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jSearchText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jSearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTitleLabel)
                        .addComponent(jTitleText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRatingText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRatingLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jDateLabel)
                            .addComponent(jReleaseDateText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jGenreLabel)
                            .addComponent(jGenreText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jDurationLabel)
                            .addComponent(jDurationText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jUpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(186, 186, 186))
        );
    }// </editor-fold>//GEN-END:initComponents

    
    private void jClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jClearButtonActionPerformed
        // TODO add your handling code here:
                
        //CLEAR//
        
        jTitleText.setText("");
	jRatingText.setText("");
	jReleaseDateText.setText("");
	jGenreText.setText("");
	jDurationText.setText("");
        jFilePathText.setText("");
        moviePosterLabel.setIcon(null);
    }//GEN-LAST:event_jClearButtonActionPerformed

    private void jUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUpdateButtonActionPerformed
        // TODO add your handling code here:
        
        //UPDATE//

            String title = jTitleText.getText();
            String rating = jRatingText.getText();
            int released = Integer.parseInt((jReleaseDateText.getText()));
            String genre = jGenreText.getText();
            int duration = Integer.parseInt(jDurationText.getText());
            String imagePath = jFilePathText.getText();
            
            try {
            Connector connector = new Connector();
            Connection con = connector.getConnection();
            
            int selectedRow = jMovieTable.getSelectedRow();
	    int movie_id_column = 0;
 	    int movie_id = (int)jMovieTable.getModel().getValueAt(selectedRow, movie_id_column);

	    String query = "UPDATE movies SET title = ?, rating = ?, released = ?, genre = ?, duration = ?, image = ? WHERE movie_id = ?";
	    PreparedStatement prepStmt = con.prepareStatement(query);
            
	    prepStmt.setString(1, title);
            prepStmt.setString(2, rating);
            prepStmt.setInt(3, released);
            prepStmt.setString(4, genre);
            prepStmt.setInt(5, duration);
            
            InputStream in;
            try {
                in = new FileInputStream(imagePath);
                prepStmt.setBlob(6, in);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(MoviePanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            prepStmt.setInt(7, movie_id);
            
            prepStmt.executeUpdate();
	    
	    } catch (SQLException e) {
            System.out.println(e);
	    }
        
        jTitleText.setText("");
	jRatingText.setText("");
	jReleaseDateText.setText("");
	jGenreText.setText("");
	jDurationText.setText("");
        jFilePathText.setText("");
        moviePosterLabel.setIcon(null);
        
        refreshTable();
    }//GEN-LAST:event_jUpdateButtonActionPerformed

    private void jAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAddButtonActionPerformed
        // TODO add your handling code here:
        
        //ADD//
        
        String title = jTitleText.getText();
        String rating = jRatingText.getText();
        int released = Integer.parseInt((jReleaseDateText.getText()));
        String genre = jGenreText.getText();
        int duration = Integer.parseInt(jDurationText.getText());  
        String imagePath = jFilePathText.getText();

        String query = "INSERT INTO movies (title, rating, released, genre, duration, image) VALUES (?, ?, ?, ?, ?, ?)";
        
        try {
            Connector connector = new Connector();
            Connection con = connector.getConnection();
            
	    PreparedStatement prepStmt = con.prepareStatement(query);
            
	    prepStmt.setString(1, title);
            prepStmt.setString(2, rating);
            prepStmt.setInt(3, released);
            prepStmt.setString(4, genre);
            prepStmt.setInt(5, duration);
            InputStream in;
            try {
                in = new FileInputStream(imagePath);
                prepStmt.setBlob(6, in);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(MoviePanel.class.getName()).log(Level.SEVERE, null, ex);
            }


            prepStmt.executeUpdate();

	    
	    } catch (SQLException e) {
            System.out.println(e);
	    }
        
        jTitleText.setText("");
	jRatingText.setText("");
	jReleaseDateText.setText("");
	jGenreText.setText("");
	jDurationText.setText("");
        jFilePathText.setText("");
        moviePosterLabel.setIcon(null);
        
        refreshTable();
    }//GEN-LAST:event_jAddButtonActionPerformed

    private void jSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSearchButtonActionPerformed
        // TODO add your handling code here:
        
        //SEARCH//
        
        String searchInput = jSearchText.getText();
        
        try {
            Connector connector = new Connector();
            Connection con = connector.getConnection();

            String query = "SELECT movie_id, title, rating, released, genre, duration FROM movies WHERE title LIKE ?";

                
                    PreparedStatement pstmt = con.prepareStatement(query);
                    pstmt.setString(1, "%" + searchInput + "%");
                    ResultSet resultSet = pstmt.executeQuery();
                    

                    DefaultTableModel model = (DefaultTableModel) jMovieTable.getModel();
                    model.setRowCount(0);

                    while (resultSet.next()) {
                    int movieId = resultSet.getInt("movie_id");
                    String title = resultSet.getString("title");
                    String rating = resultSet.getString("rating");
                    int released = resultSet.getInt("released");
                    String genre = resultSet.getString("genre");
                    int duration = resultSet.getInt("duration");

                    model.addRow(new Object[]{movieId, title, rating, released, genre, duration});
                    }

            } catch (SQLException e) {
              System.out.println(e);
            }
    }//GEN-LAST:event_jSearchButtonActionPerformed

    private void jSearchTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSearchTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jSearchTextActionPerformed

    private void jRatingTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRatingTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRatingTextActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:     
        
        try {
                 Connector connector = new Connector();
                 Connection con = connector.getConnection();

                 String query = "SELECT movie_id, title, rating, released, genre, duration FROM movies";

                 try (PreparedStatement pstmt = con.prepareStatement(query);
                      ResultSet resultSet = pstmt.executeQuery()) {

                     DefaultTableModel model = (DefaultTableModel) jMovieTable.getModel();
                     model.setRowCount(0);

                     while (resultSet.next()) {
                         int movieId = resultSet.getInt("movie_id");
                         String title = resultSet.getString("title");
                         String rating = resultSet.getString("rating");
                         int released = resultSet.getInt("released");
                         String genre = resultSet.getString("genre");
                         int duration = resultSet.getInt("duration");

                         model.addRow(new Object[]{movieId, title, rating, released, genre, duration});
                     }
                 }
             } catch (SQLException e) {
                 System.out.println(e);
             }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        // TODO add your handling code here:     
    }//GEN-LAST:event_formMouseMoved

    private void jDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDeleteButtonActionPerformed
        // TODO add your handling code here:
        
        //DELETE//
	
	try {

	    Connector connector = new Connector();
            Connection con = connector.getConnection();

	    int selectedRow = jMovieTable.getSelectedRow();
	    int movieid_column = 0;
 	    int movie_table_id = (int) jMovieTable.getModel().getValueAt(selectedRow, movieid_column);

            
            String query = "DELETE FROM movies WHERE movie_id = ?";
            
            PreparedStatement prepStmt = con.prepareStatement(query);
            prepStmt.setInt(1, movie_table_id);
            
            prepStmt.executeUpdate();

	} catch (SQLException e) {
        System.out.println(e);
	}
        
        refreshTable();
    }//GEN-LAST:event_jDeleteButtonActionPerformed

    private void jMovieTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMovieTableMouseReleased
        // TODO add your handling code here:
        
        //Table row clicked//
        
        moviePosterLabel.setIcon(null);
        
            int selectedRow = jMovieTable.getSelectedRow();
	    int movie_id_column = 0;
	    int title_column = 1;
	    int rating_column = 2;
	    int release_date_column = 3;
	    int genre_column = 4;
	    int duration_column = 5;
            String movie_id = jMovieTable.getModel().getValueAt(selectedRow, movie_id_column).toString();
            
        if(selectedRow!=-1){

	    jTitleText.setText(jMovieTable.getModel().getValueAt(selectedRow, title_column).toString());
	    jRatingText.setText(jMovieTable.getModel().getValueAt(selectedRow, rating_column).toString());
	    jReleaseDateText.setText(jMovieTable.getModel().getValueAt(selectedRow, release_date_column).toString());
	    jGenreText.setText(jMovieTable.getModel().getValueAt(selectedRow, genre_column).toString());
	    jDurationText.setText(jMovieTable.getModel().getValueAt(selectedRow, duration_column).toString());
            
            try {
            Connector connector = new Connector();
            Connection con = connector.getConnection();

            String query = "SELECT image FROM movies WHERE movie_id = ?";

                    PreparedStatement pstmt = con.prepareStatement(query);
                    pstmt.setString(1, movie_id);
                    ResultSet resultSet = pstmt.executeQuery();

                    while (resultSet.next()) {
                    byte[] blobImage = resultSet.getBytes("image");
                    Image image = convertBlobToImage(blobImage);
                    image = image.getScaledInstance(150,225,Image.SCALE_DEFAULT);
                    
                    ImageIcon icon = new ImageIcon(image);
                    moviePosterLabel.setIcon(icon);
                    }

            } catch (SQLException e) {
              System.out.println(e);
            }   catch (IOException ex) {
                    Logger.getLogger(MoviePanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            
        }
    }//GEN-LAST:event_jMovieTableMouseReleased

    private void chooseImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseImageButtonActionPerformed
        
        //Choose Image//
        
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Image Files", "png", "jpg");
        fileChooser.setFileFilter(filter);
        int result = fileChooser.showOpenDialog(null);

        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            String filepath = fileChooser.getSelectedFile().getAbsolutePath();
            Image image = null;
            try {
                image = ImageIO.read(selectedFile).getScaledInstance(150,225,Image.SCALE_DEFAULT);
            } catch (IOException e) {
                e.printStackTrace();
            }
            
            ImageIcon icon = new ImageIcon(image);
            moviePosterLabel.setIcon(icon);
            jFilePathText.setText(filepath);
        }
    }//GEN-LAST:event_chooseImageButtonActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton chooseImageButton;
    private javax.swing.JPanel imageContainerPanel;
    private javax.swing.JButton jAddButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jClearButton;
    private javax.swing.JLabel jDateLabel;
    private javax.swing.JButton jDeleteButton;
    private javax.swing.JLabel jDurationLabel;
    private javax.swing.JTextField jDurationText;
    private javax.swing.JTextField jFilePathText;
    private javax.swing.JLabel jGenreLabel;
    private javax.swing.JTextField jGenreText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jMovieLabel;
    private javax.swing.JTable jMovieTable;
    private javax.swing.JLabel jRatingLabel;
    private javax.swing.JTextField jRatingText;
    private javax.swing.JTextField jReleaseDateText;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jSearchButton;
    private javax.swing.JTextField jSearchText;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel jTitleLabel;
    private javax.swing.JTextField jTitleText;
    private javax.swing.JButton jUpdateButton;
    private javax.swing.JLabel moviePosterLabel;
    // End of variables declaration//GEN-END:variables
}
