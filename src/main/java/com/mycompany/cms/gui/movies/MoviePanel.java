package com.mycompany.cms.gui.movies;

import com.mycompany.cms.util.Connector;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author ikelm
 */
public class MoviePanel extends javax.swing.JPanel {

    /**
     * Creates new form MoviePanel
     */
    public MoviePanel() {
        initComponents();
        refreshTable();

    }
    
    private void refreshTable() {       
        try {
            Connector connector = new Connector();
            Connection con = connector.getConnection();

            String query = "SELECT movie_id, title, rating, released, genre, duration FROM movies";

                try (PreparedStatement pstmt = con.prepareStatement(query);
                    ResultSet resultSet = pstmt.executeQuery()) {

                    DefaultTableModel model = (DefaultTableModel) jMovieTable.getModel();
                    model.setRowCount(0);

                    while (resultSet.next()) {
                    int movieId = resultSet.getInt("movie_id");
                    String title = resultSet.getString("title");
                    String rating = resultSet.getString("rating");
                    int released = resultSet.getInt("released");
                    String genre = resultSet.getString("genre");
                    int duration = resultSet.getInt("duration");

                    model.addRow(new Object[]{movieId, title, rating, released, genre, duration});
                    }
                }
            } catch (SQLException e) {
              System.out.println(e);
            }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jClearButton = new javax.swing.JButton();
        jUpdateButton = new javax.swing.JButton();
        jAddButton = new javax.swing.JButton();
        jSearchText = new javax.swing.JTextField();
        jMovieLabel = new javax.swing.JLabel();
        jTitleLabel = new javax.swing.JLabel();
        jRatingLabel = new javax.swing.JLabel();
        jDateLabel = new javax.swing.JLabel();
        jGenreLabel = new javax.swing.JLabel();
        jSearchButton = new javax.swing.JButton();
        jDurationLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jMovieTable = new javax.swing.JTable();
        jTitleText = new javax.swing.JTextField();
        jReleaseDateText = new javax.swing.JTextField();
        jDurationText = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jDeleteButton = new javax.swing.JButton();
        chooseImageButton = new javax.swing.JButton();
        imageContainerPanel = new javax.swing.JPanel();
        moviePosterLabel = new javax.swing.JLabel();
        jGenreComboBox = new javax.swing.JComboBox<>();
        jRatingComboBox = new javax.swing.JComboBox<>();
        jFilePathText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(780, 720));
        setRequestFocusEnabled(false);
        setVerifyInputWhenFocusTarget(false);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });

        jClearButton.setBackground(new java.awt.Color(242, 242, 242));
        jClearButton.setText("Clear");
        jClearButton.setPreferredSize(null);
        jClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jClearButtonActionPerformed(evt);
            }
        });

        jUpdateButton.setBackground(new java.awt.Color(242, 242, 242));
        jUpdateButton.setText("Update");
        jUpdateButton.setPreferredSize(null);
        jUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUpdateButtonActionPerformed(evt);
            }
        });

        jAddButton.setBackground(new java.awt.Color(239, 124, 18));
        jAddButton.setForeground(new java.awt.Color(255, 255, 255));
        jAddButton.setText("Add");
        jAddButton.setPreferredSize(null);
        jAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAddButtonActionPerformed(evt);
            }
        });

        jSearchText.setPreferredSize(null);
        jSearchText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSearchTextActionPerformed(evt);
            }
        });

        jMovieLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jMovieLabel.setText("Movies");

        jTitleLabel.setText("Title");

        jRatingLabel.setText("Rating");

        jDateLabel.setText("Release date");

        jGenreLabel.setText("Genre");

        jSearchButton.setBackground(new java.awt.Color(239, 124, 18));
        jSearchButton.setForeground(new java.awt.Color(255, 255, 255));
        jSearchButton.setText("Search");
        jSearchButton.setPreferredSize(null);
        jSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSearchButtonActionPerformed(evt);
            }
        });

        jDurationLabel.setText("Duration");

        jMovieTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jMovieTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Title ", "Rating", "Release date", "Genre", "Duration"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jMovieTable.getTableHeader().setReorderingAllowed(false);
        jMovieTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jMovieTableMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jMovieTable);
        if (jMovieTable.getColumnModel().getColumnCount() > 0) {
            jMovieTable.getColumnModel().getColumn(0).setResizable(false);
            jMovieTable.getColumnModel().getColumn(0).setPreferredWidth(50);
            jMovieTable.getColumnModel().getColumn(1).setResizable(false);
            jMovieTable.getColumnModel().getColumn(2).setResizable(false);
            jMovieTable.getColumnModel().getColumn(3).setResizable(false);
            jMovieTable.getColumnModel().getColumn(4).setResizable(false);
            jMovieTable.getColumnModel().getColumn(5).setResizable(false);
        }

        jTitleText.setPreferredSize(null);

        jReleaseDateText.setPreferredSize(null);

        jDurationText.setPreferredSize(null);

        jButton1.setBackground(new java.awt.Color(242, 242, 242));
        jButton1.setText("Refresh");
        jButton1.setPreferredSize(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jDeleteButton.setBackground(new java.awt.Color(242, 242, 242));
        jDeleteButton.setText("Delete");
        jDeleteButton.setPreferredSize(null);
        jDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeleteButtonActionPerformed(evt);
            }
        });

        chooseImageButton.setBackground(new java.awt.Color(242, 242, 242));
        chooseImageButton.setText("Choose image");
        chooseImageButton.setPreferredSize(new java.awt.Dimension(85, 30));
        chooseImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseImageButtonActionPerformed(evt);
            }
        });

        imageContainerPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        imageContainerPanel.setPreferredSize(new java.awt.Dimension(200, 300));

        moviePosterLabel.setText(" ");

        javax.swing.GroupLayout imageContainerPanelLayout = new javax.swing.GroupLayout(imageContainerPanel);
        imageContainerPanel.setLayout(imageContainerPanelLayout);
        imageContainerPanelLayout.setHorizontalGroup(
            imageContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(moviePosterLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
        );
        imageContainerPanelLayout.setVerticalGroup(
            imageContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(moviePosterLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
        );

        jGenreComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {
            "Action",
            "Comedy",
            "Drama",
            "Fantasy",
            "Horror",
            "Mystery",
            "Romance",
            "Thriller",
            "Western" }));

jRatingComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "G", "PG", "R-13", "R-16", "R-18" }));

jFilePathText.setEditable(false);
jFilePathText.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        jFilePathTextActionPerformed(evt);
    }
    });

    jLabel1.setText("File path:");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(50, 50, 50)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jTitleLabel)
                                .addGap(55, 55, 55)
                                .addComponent(jTitleText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(107, 107, 107)
                                .addComponent(jUpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jDeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDateLabel)
                                    .addComponent(jGenreLabel)
                                    .addComponent(jDurationLabel)
                                    .addComponent(jRatingLabel))
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jReleaseDateText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jDurationText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jGenreComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jRatingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(19, 19, 19)
                            .addComponent(jClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createSequentialGroup()
                    .addGap(194, 194, 194)
                    .addComponent(chooseImageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createSequentialGroup()
                    .addGap(50, 50, 50)
                    .addComponent(jMovieLabel)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(imageContainerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(150, 150, 150)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jLabel1)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jSearchText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jSearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(jFilePathText))
                    .addGap(25, 25, 25))))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(55, 55, 55)
                    .addComponent(jMovieLabel))
                .addGroup(layout.createSequentialGroup()
                    .addGap(115, 115, 115)
                    .addComponent(imageContainerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel1)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(chooseImageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jFilePathText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSearchText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTitleLabel)
                    .addComponent(jTitleText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jRatingLabel)
                        .addComponent(jRatingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jDateLabel)
                        .addComponent(jReleaseDateText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jGenreLabel)
                        .addComponent(jGenreComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jDurationLabel)
                        .addComponent(jDurationText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(35, 35, 35)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jUpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jDeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(186, 186, 186))
    );
    }// </editor-fold>//GEN-END:initComponents

    
    private void jClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jClearButtonActionPerformed
        // TODO add your handling code here:
                
        //CLEAR//
        
        jTitleText.setText("");
	jRatingComboBox.setSelectedIndex(0);
	jReleaseDateText.setText("");
	jGenreComboBox.setSelectedIndex(0);
	jDurationText.setText("");
    }//GEN-LAST:event_jClearButtonActionPerformed

    private void jUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUpdateButtonActionPerformed
        // TODO add your handling code here:
        
        //UPDATE//

            String title = jTitleText.getText();
            String rating = (String) jRatingComboBox.getSelectedItem();
            int released = Integer.parseInt((jReleaseDateText.getText()));
            String genre = (String) jGenreComboBox.getSelectedItem();
            int duration = Integer.parseInt(jDurationText.getText()); 
        
        try {
            Connector connector = new Connector();
            Connection con = connector.getConnection();
            
            int selectedRow = jMovieTable.getSelectedRow();
	    int movie_id_column = 0;

 	    int movie_id = (int)jMovieTable.getModel().getValueAt(selectedRow, movie_id_column);

	    String query = "UPDATE movies SET title = ?, rating = ?, released = ?, genre = ?, duration = ? WHERE movie_id = ?";
	    PreparedStatement prepStmt = con.prepareStatement(query);
            
	    prepStmt.setString(1, title);
            prepStmt.setString(2, rating);
            prepStmt.setInt(3, released);
            prepStmt.setString(4, genre);
            prepStmt.setInt(5, duration);
            prepStmt.setInt(6, movie_id);
            
            prepStmt.executeUpdate();

	    
	    } catch (SQLException e) {
            System.out.println(e);
	    }
        
        jTitleText.setText("");
        jRatingComboBox.setSelectedIndex(0);
	jReleaseDateText.setText("");
	jGenreComboBox.setSelectedIndex(0);
	jDurationText.setText("");
        
        refreshTable();
    }//GEN-LAST:event_jUpdateButtonActionPerformed

    private void jAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAddButtonActionPerformed
        // TODO add your handling code here:
        
        //ADD//
        
        String title = jTitleText.getText();
        String rating =  (String) jRatingComboBox.getSelectedItem();
        int released = Integer.parseInt((jReleaseDateText.getText()));
        String genre = (String) jGenreComboBox.getSelectedItem();
        int duration = Integer.parseInt(jDurationText.getText());  
//        Image image = moviePosterLabel
        
        String query = "INSERT INTO movies (title, rating, released, genre, duration) VALUES (?, ?, ?, ?, ?)";
        
        try {
            Connector connector = new Connector();
            Connection con = connector.getConnection();
            
	    PreparedStatement prepStmt = con.prepareStatement(query);
            
	    prepStmt.setString(1, title);
            prepStmt.setString(2, rating);
            prepStmt.setInt(3, released);
            prepStmt.setString(4, genre);
            prepStmt.setInt(5, duration);
            
            prepStmt.executeUpdate();

	    
	    } catch (SQLException e) {
            System.out.println(e);
	    }
        
        jTitleText.setText("");
	jRatingComboBox.setSelectedIndex(0);
	jReleaseDateText.setText("");
	jGenreComboBox.setSelectedIndex(0);
	jDurationText.setText("");
        
        refreshTable();
    }//GEN-LAST:event_jAddButtonActionPerformed

    private void jSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSearchButtonActionPerformed
        // TODO add your handling code here:
        
        //SEARCH//
        
        String searchInput = jSearchText.getText();
        
        try {
            Connector connector = new Connector();
            Connection con = connector.getConnection();

            String query = "SELECT movie_id, title, rating, released, genre, duration FROM movies WHERE title LIKE ?";

                
                    PreparedStatement pstmt = con.prepareStatement(query);
                    pstmt.setString(1, "%" + searchInput + "%");
                    ResultSet resultSet = pstmt.executeQuery();
                    

                    DefaultTableModel model = (DefaultTableModel) jMovieTable.getModel();
                    model.setRowCount(0);

                    while (resultSet.next()) {
                    int movieId = resultSet.getInt("movie_id");
                    String title = resultSet.getString("title");
                    String rating = resultSet.getString("rating");
                    int released = resultSet.getInt("released");
                    String genre = resultSet.getString("genre");
                    int duration = resultSet.getInt("duration");

                    model.addRow(new Object[]{movieId, title, rating, released, genre, duration});
                    }

            } catch (SQLException e) {
              System.out.println(e);
            }
    }//GEN-LAST:event_jSearchButtonActionPerformed

    private void jSearchTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSearchTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jSearchTextActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:     
        
        try {
                 Connector connector = new Connector();
                 Connection con = connector.getConnection();

                 String query = "SELECT movie_id, title, rating, released, genre, duration FROM movies";

                 try (PreparedStatement pstmt = con.prepareStatement(query);
                      ResultSet resultSet = pstmt.executeQuery()) {

                     DefaultTableModel model = (DefaultTableModel) jMovieTable.getModel();
                     model.setRowCount(0);

                     while (resultSet.next()) {
                         int movieId = resultSet.getInt("movie_id");
                         String title = resultSet.getString("title");
                         String rating = resultSet.getString("rating");
                         int released = resultSet.getInt("released");
                         String genre = resultSet.getString("genre");
                         int duration = resultSet.getInt("duration");

                         model.addRow(new Object[]{movieId, title, rating, released, genre, duration});
                     }
                 }
             } catch (SQLException e) {
                 System.out.println(e);
             }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        // TODO add your handling code here:     
    }//GEN-LAST:event_formMouseMoved

    private void jDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDeleteButtonActionPerformed
        // TODO add your handling code here:
        
        //Delete//
	
	try {

	    Connector connector = new Connector();
            Connection con = connector.getConnection();

	    int selectedRow = jMovieTable.getSelectedRow();
	    int movieid_column = 0;
 	    int movie_table_id = (int) jMovieTable.getModel().getValueAt(selectedRow, movieid_column);

            
            String query = "DELETE FROM movies WHERE movie_id = ?";
            
            PreparedStatement prepStmt = con.prepareStatement(query);
            prepStmt.setInt(1, movie_table_id);
            
            prepStmt.executeUpdate();

	} catch (SQLException e) {
        System.out.println(e);
	}
        
        refreshTable();
    }//GEN-LAST:event_jDeleteButtonActionPerformed

    private void jMovieTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMovieTableMouseReleased
        // TODO add your handling code here:
        int selectedRow = jMovieTable.getSelectedRow();
	    int movie_id_column = 0;
	    int title_column = 1;
	    int rating_column = 2;
	    int release_date_column = 3;
	    int genre_column = 4;
	    int duration_column = 5;
            String movie_id = jMovieTable.getModel().getValueAt(selectedRow, movie_id_column).toString();
            
        if(selectedRow!=-1){

	    jTitleText.setText(jMovieTable.getModel().getValueAt(selectedRow, title_column).toString());
	    jRatingComboBox.setSelectedItem(jMovieTable.getModel().getValueAt(selectedRow, rating_column).toString());
	    jReleaseDateText.setText(jMovieTable.getModel().getValueAt(selectedRow, release_date_column).toString());
	    jGenreComboBox.setSelectedItem(jMovieTable.getModel().getValueAt(selectedRow, genre_column).toString());
	    jDurationText.setText(jMovieTable.getModel().getValueAt(selectedRow, duration_column).toString());
        }
    }//GEN-LAST:event_jMovieTableMouseReleased

    private void chooseImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseImageButtonActionPerformed
        
        //Choose Image//
        
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Image Files", "png", "jpg");
        fileChooser.setFileFilter(filter);
        int result = fileChooser.showOpenDialog(null);

        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            String filepath = fileChooser.getSelectedFile().getAbsolutePath();
            Image image = null;
            try {
                image = ImageIO.read(selectedFile).getScaledInstance(150,225,Image.SCALE_DEFAULT);
            } catch (IOException e) {
                e.printStackTrace();
            }
            
            ImageIcon icon = new ImageIcon(image);
            moviePosterLabel.setIcon(icon);
            jFilePathText.setText(filepath);
        }
        
    }//GEN-LAST:event_chooseImageButtonActionPerformed

    private void jFilePathTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFilePathTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFilePathTextActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton chooseImageButton;
    private javax.swing.JPanel imageContainerPanel;
    private javax.swing.JButton jAddButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jClearButton;
    private javax.swing.JLabel jDateLabel;
    private javax.swing.JButton jDeleteButton;
    private javax.swing.JLabel jDurationLabel;
    private javax.swing.JTextField jDurationText;
    private javax.swing.JTextField jFilePathText;
    private javax.swing.JComboBox<String> jGenreComboBox;
    private javax.swing.JLabel jGenreLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jMovieLabel;
    private javax.swing.JTable jMovieTable;
    private javax.swing.JComboBox<String> jRatingComboBox;
    private javax.swing.JLabel jRatingLabel;
    private javax.swing.JTextField jReleaseDateText;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jSearchButton;
    private javax.swing.JTextField jSearchText;
    private javax.swing.JLabel jTitleLabel;
    private javax.swing.JTextField jTitleText;
    private javax.swing.JButton jUpdateButton;
    private javax.swing.JLabel moviePosterLabel;
    // End of variables declaration//GEN-END:variables
}
